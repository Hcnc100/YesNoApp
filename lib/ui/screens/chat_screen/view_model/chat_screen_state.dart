

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';
import 'package:injector/injector.dart';
import 'package:riverpod/riverpod.dart';
import 'package:yes_no_app/domain/yes_no_repository.dart';
import 'package:yes_no_app/models/message.dart';

import 'chat_view_model.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'chat_screen_state.freezed.dart';

@freezed
class ChatScreenState with _$ChatScreenState{
      const factory ChatScreenState({
          @Default(false) bool isLoading,
          @Default([]) List<Message> listMessages,
      }) = _ChatScreenState;
}


final chatScreenViewModelProvider = StateNotifierProvider.autoDispose<ChatViewModel, ChatScreenState>(
  (ref) => ChatViewModel(
    const ChatScreenState(),
    yesNoRepository: Injector.appInstance.get<YesNoRepository>(),
  ),
);


final chatScreenLoadingProvider = Provider.autoDispose<bool>(
  (ref) => ref.watch(chatScreenViewModelProvider).isLoading,
);

final listMessagesProvider = Provider.autoDispose<List<Message>>(
  (ref) => ref.watch(chatScreenViewModelProvider).listMessages,
);

